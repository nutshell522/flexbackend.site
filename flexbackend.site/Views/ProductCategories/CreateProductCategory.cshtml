@model Flex.Products.dll.Models.ViewModel.ProductCategoryCreateVM

@{
    ViewBag.Title = "CreateProductCategory";
    var salesCategory = ViewBag.SalesCategoryId as SelectList;
}

<h2>新增商品分類</h2>


@using (Html.BeginForm()) 
{
    @Html.AntiForgeryToken()
    
    <div class="row">
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="mb-3">
            @Html.LabelFor(model => model.fk_SalesCategoryId, htmlAttributes: new { @class = "form-label" })
                @Html.DropDownListFor(model => model.fk_SalesCategoryId, salesCategory, new { @class = "form-select", id = "fk_SalesCategoryId"})
                @Html.ValidationMessageFor(model => model.fk_SalesCategoryId, "", new { @class = "text-danger" })
        </div>

        <div class="mb-3">
            @Html.LabelFor(model => model.ProductCategoryName, htmlAttributes: new { @class = "form-label" })
                @Html.EditorFor(model => model.ProductCategoryName, new { htmlAttributes = new { @class = "form-control",id= "ProductCategoryName" } })
                @Html.ValidationMessageFor(model => model.ProductCategoryName, "", new { @class = "text-danger" })
        </div>

        <div class="mb-3">
            @Html.LabelFor(model => model.CategoryPath, htmlAttributes: new { @class = "form-label" })
                @Html.EditorFor(model => model.CategoryPath, new { htmlAttributes = new { @class = "form-control bg-secondary", @readonly="readonly" ,id= "CategoryPath" } })
                @Html.ValidationMessageFor(model => model.CategoryPath, "", new { @class = "text-danger" })
        </div>

        <div class="mb-3">
            <input type="submit" value="新增" class="btn btn-primary" />
            <input type="button" value="返回" class="btn btn-primary" onclick='location.href="@Url.Action("ProductCategoryIndex")"' />
        </div>
    </div>
}


@section Scripts {
    <script>
        document.addEventListener("DOMContentLoaded", function () {
            var productCategoryName = document.querySelector("#ProductCategoryName");
            var salesCategorySelect = document.querySelector("#fk_SalesCategoryId");
            var categoryPath = document.querySelector("#CategoryPath");

            productCategoryName.addEventListener('input', updateCategoryPath);
            salesCategorySelect.addEventListener('change', updateCategoryPath);

            function updateCategoryPath(){
                let salesCategory = salesCategorySelect.options[salesCategorySelect.selectedIndex].text;
                let productCategory = productCategoryName.value;
                let productCategoryPath = salesCategory + '/' + productCategory;
                categoryPath.value = productCategoryPath;
            }

            updateCategoryPath();
        })
    </script>
    @Scripts.Render("~/bundles/jqueryval")
}
