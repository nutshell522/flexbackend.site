@model Orders.ViewModels.OrderItemsVM

@{
    ViewBag.Title = "CreateOrderItems";
}

<h2>新增明細項目</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="row">

        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @*<div class="mb-3">
                @Html.LabelFor(model => model.order_Id, htmlAttributes: new { @class = "form-label" })
                    @Html.EditorFor(model => model.order_Id, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.order_Id, "", new { @class = "text-danger" })
            </div>*@

        <div class="mb-3">
            @Html.LabelFor(model => model.product_name, htmlAttributes: new { @class = "form-label" })
            @Html.EditorFor(model => model.product_name, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.product_name, "", new { @class = "text-danger" })
        </div>

        @*<div class="mb-3">
                @Html.LabelFor(model => model.fk_typeId, htmlAttributes: new { @class = "form-label" })
                @Html.EditorFor(model => model.fk_typeId, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.fk_typeId, "", new { @class = "text-danger" })
            </div>*@
        <div class="mb-3">
            @Html.LabelFor(model => model.fk_typeId, htmlAttributes: new { @class = "form-label" })
            @if (TempData["fk_typeId"] != null && ((Dictionary<int, string>)TempData["fk_typeId"]).Any())
            {
                @Html.DropDownListFor(model => model.fk_typeId, new SelectList((Dictionary<int, string>)TempData["fk_typeId"], "Key", "Value"), "請選擇", new { @class = "form-control" })
            }
            else
            {
                <p>No  available.</p>
            }
            @Html.ValidationMessageFor(model => model.fk_typeId, "", new { @class = "text-danger" })
        </div>

        <div class="mb-3">
            @Html.LabelFor(model => model.per_price, htmlAttributes: new { @class = "form-label" })
            @Html.EditorFor(model => model.per_price, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.per_price, "", new { @class = "text-danger" })
        </div>

        <div class="mb-3">
            @Html.LabelFor(model => model.quantity, htmlAttributes: new { @class = "form-label" })
            @Html.EditorFor(model => model.quantity, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.quantity, "", new { @class = "text-danger" })
        </div>

        <div class="mb-3">
            @Html.LabelFor(model => model.discount_name, htmlAttributes: new { @class = "form-label" })
            @Html.EditorFor(model => model.discount_name, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.discount_name, "", new { @class = "text-danger" })
        </div>

        @*<div class="mb-3">
                @Html.LabelFor(model => model.subtotal, htmlAttributes: new { @class = "form-label" })
                @Html.EditorFor(model => model.subtotal, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.subtotal, "", new { @class = "text-danger" })
            </div>

            <div class="mb-3">
                @Html.LabelFor(model => model.discount_subtotal, htmlAttributes: new { @class = "form-label" })
                @Html.EditorFor(model => model.discount_subtotal, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.discount_subtotal, "", new { @class = "text-danger" })
            </div>*@

        <div class="mb-3">
            @Html.LabelFor(model => model.Items_description, htmlAttributes: new { @class = "form-label" })
            @Html.EditorFor(model => model.Items_description, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Items_description, "", new { @class = "text-danger" })
        </div>

        <div class="mb-3">
            <input type="submit" value="加入" class="btn btn-primary" />
        </div>
    </div>
}
<div>
    <a href="@Url.Action("OrderItemsIndex", new { id = TempData["OrderId"] })" class="btn btn-primary text-light">
        回到訂單管理
    </a>
</div>

@*<div class="mb-3">
    <input type="submit" value="回到上一頁" class="btn btn-primary" onclick="goBack()" />
</div>

<script>
    function goBack() {
        window.location.href = '@Url.Action("OrderItemsIndex", "Orders", new {id = Model.order_Id })';
    }
</script>*@

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
