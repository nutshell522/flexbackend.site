@model Members.dll.Models.ViewsModels.StaffsCreateVM

@{
    ViewBag.Title = "CreateStaff";
}

<h2>CreateStaff</h2>


@using (Html.BeginForm()) 
{
    @Html.AntiForgeryToken()
    
<div class="row">
    <h4>StaffsCreateVM</h4>
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    @*<div class="mb-3">
            @Html.LabelFor(model => model.StaffId, htmlAttributes: new { @class = "form-label" })
                @Html.EditorFor(model => model.StaffId, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.StaffId, "", new { @class = "text-danger" })
        </div>*@

    <div class="mb-3">
        @Html.LabelFor(model => model.Department, htmlAttributes: new { @class = "form-label" })
        @Html.EditorFor(model => model.Department, new { htmlAttributes = new { @class = "form-control" } })
        @Html.ValidationMessageFor(model => model.Department, "", new { @class = "text-danger" })
    </div>

    <div class="mb-3">
        @Html.LabelFor(model => model.JobTitle, htmlAttributes: new { @class = "form-label" })
        @Html.EditorFor(model => model.JobTitle, new { htmlAttributes = new { @class = "form-control" } })
        @Html.ValidationMessageFor(model => model.JobTitle, "", new { @class = "text-danger" })
    </div>

    <div class="mb-3">
        @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "form-label" })
        @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
        @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
    </div>

    <div class="mb-3">
        @Html.LabelFor(model => model.Age, htmlAttributes: new { @class = "form-label" })
        @Html.EditorFor(model => model.Age, new { htmlAttributes = new { @class = "form-control" } })
        @Html.ValidationMessageFor(model => model.Age, "", new { @class = "text-danger" })
    </div>

    <div class="mb-3" >       
        @Html.LabelFor(model => model.Birthday, htmlAttributes: new { @class = "form-label" })
        @Html.EditorFor(model => model.Birthday, new { htmlAttributes = new { @class = "form-control" } })
        @*@Html.ValidationMessageFor(model => model.Birthday, "", new { @class = "text-danger" })*@
        <input type="date" />    
    </div>

    <div class="mb-3">
        @Html.LabelFor(model => model.Gender, htmlAttributes: new { @class = "form-label" })
        @Html.EditorFor(model => model.Gender, new { htmlAttributes = new { @class = "form-control" } })
        @Html.ValidationMessageFor(model => model.Gender, "", new { @class = "text-danger" })
    </div>

    <div class="mb-3">
        @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "form-label" })
        @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })
        @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
    </div>

    <div class="mb-3">
        @Html.LabelFor(model => model.StaffPermission, htmlAttributes: new { @class = "form-label" })
        @Html.EditorFor(model => model.StaffPermission, new { htmlAttributes = new { @class = "form-control" } })
        @Html.ValidationMessageFor(model => model.StaffPermission, "", new { @class = "text-danger" })
    </div>

    <div class="mb-3">
        <input type="submit" value="Create" class="btn btn-primary" />
    </div>
</div>
}

<div>
    @Html.ActionLink("Back to List", "StaffList")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
