@model IEnumerable<Flex_Activity.dll.Models.ViewModels.ActivityIndexVM>
@using Flex_Activity.dll.Models.ViewModels;


@{
    ViewBag.Title = "Index";

    var categories = ViewBag.fk_ActivityCategoryId as SelectList;  //把ViewBag.CategoryId轉成SelectList
    var criteria = ViewBag.Criteria as ActivitySearchCriteria;
    string id_categoryId = criteria.CategoryId.HasValue ? criteria.CategoryId.Value.ToString() : "";

}
@section Styles{


    <link rel="stylesheet" href="https://cdn.datatables.net/1.13.5/css/jquery.dataTables.min.css">

}
<style>
    .disabled-btn {
        pointer-events: none;
        opacity: 0.5;
        cursor: not-allowed;
    }

    .hidden {
        display: none;
    }
</style>


<h2>活動管理</h2>

<p>

</p>
<!--<div class="search-bar-container mb-4 d-flex">
    <form method="get" class="me-auto">
        <div class="row">
            <div class="left d-flex">
 輸入框區域 寬度可移除下方class w-50 自行調整
<div class="col col-3">
<div class="input-group me-2">
<input class="form-control search-bar" type="text" placeholder="搜尋..." name="ActivityName" value="@criteria.ActivityName" id="search">
</div>-->
@*活動分類的下拉式選單*@
<!--<div class="col col-3 ms-1">
    <select class="search-bar form-select" name="CategoryId" id="id_categoryId">
        @foreach (var item in categories)
        {
            <option value="@item.Value" @(id_categoryId == item.Value ? "selected" : "" )>@item.Text</option>
        }
    </select>
</div>-->
@*搜尋按鈕*@
<!--<div class="col col-3">
                       <button class="btn btn-primary">搜尋</button>
                   </div>
               </div>
           </div>


           <div class="right">
               <a href="@Url.Action("Create")" class="btn btn-primary">
                   <i class="bi bi-plus-lg"></i> 新增
               </a>
           </div>
       </div>
   </form>
</div>-->


<form method="get" class="me-auto">
    <div class="search-bar-container mb-4 d-flex">
        <div class="left w-50 me-auto">

            <div class="input-group">
                <input class="form-control search-bar" type="text" placeholder="搜尋..." name="ActivityName" value="@criteria.ActivityName" id="search">
            </div>

            @*活動分類的下拉式選單*@
            <div class="input-group">
                <select class="search-bar form-select" name="CategoryId" id="id_categoryId">
                    @foreach (var item in categories)
                    {
                        <option value="@item.Value" @(id_categoryId == item.Value ? "selected" : "" )>@item.Text</option>
                    }
                </select>
            </div>

            @*搜尋按鈕*@
            <div class="input-group">
                <button class="btn btn-primary">搜尋</button>
            </div>
        </div>
    </div>
    <div class="right">
        <a href="@Url.Action("Create")" class="btn btn-primary">
            <i class="bi bi-plus-lg"></i> 新增
        </a>
    </div>
</form>

<div class="table-container">
    @*<table id="myTable" class="display">
        <thead>
            <tr>
                <th>Column 1</th>
                <th>Column 2</th>
            </tr>
        </thead>
        <tbody>
            <tr>
                <td>Row 1 Data 1</td>
                <td>Row 1 Data 2</td>
            </tr>
            <tr>
                <td>Row 2 Data 1</td>
                <td>Row 2 Data 2</td>
            </tr>
        </tbody>
        </table>*@
    <table id="myTable" class="display">
        <thead>
            <tr>
                @* 有class sort-btn 能當排序按鈕，點擊切換上下箭頭，不過資料排序function須自己處理 *@
                @* 同時也有提供 th-col- 作為粗略每列寬度設定
                    th-col-0 至 th-col-20
                    超過100%資料不會溢出 也不會換行
                    如有細緻設定需求，可自己寫css設定寬度
                *@
                <th class="th-col-0 sticky">
                    <label class="form-check-label">
                        <input class="form-check-input check-all" type="checkbox">
                    </label>
                </th>
                <th class="th-col-1">
                    @Html.DisplayNameFor(model => model.ActivityId)
                </th>
                <th class="th-col-1">
                    @Html.DisplayNameFor(model => model.ActivityName)
                </th>
                <th class="th-col-2">
                    @Html.DisplayNameFor(model => model.ActivityCategoryName)
                </th>
                <th class="th-col-2">
                    @Html.DisplayNameFor(model => model.ActivityDate)
                </th>
                <th class="th-col-1">
                    @Html.DisplayNameFor(model => model.SpeakerName)
                </th>
                <th class="th-col-2">
                    @Html.DisplayNameFor(model => model.ActivityPlace)
                </th>
                <th class="th-col-1">
                    @Html.DisplayNameFor(model => model.ActivityBookStartTime)
                </th>
                <th class="th-col-1">
                    @Html.DisplayNameFor(model => model.ActivityBookEndTime)
                </th>
                <th class="th-col-1">
                    @Html.DisplayNameFor(model => model.ActivityStatusDescription)
                </th>
                <th class="text-center">管理</th>
            </tr>
        </thead>
        <tbody>
            @* 如有照片要放
                格式:
                <td><div class="table-img-container"><img src="XXX.png" alt=""></div></td>
            *@
            @*  顯示資料內有定義了狀態框，
                如有需展示狀態顏色，請在td內增加一個span，且定義class
                有提供四種顏色:
                    綠色 : status-success
                    灰色 : status-dark
                    紅色 : status-danger
                    藍色 : status-primary
                可依自己需求使用

                格式: <td class="text-center"><span class="status-success}">進行中</span></td>
            *@

            @foreach (var item in Model)
            {
                <tr>
                    @* 下方data-id後方欄位抓id，可方便勾選框抓資料 *@
                    <td class="sticky"><input class="form-check-input check-item" type="checkbox" data-id="${}"></td>
                    <td>
                        @Html.DisplayFor(modelItem => item.ActivityId)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.ActivityName)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.ActivityCategoryName)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.ActivityDate)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.SpeakerName)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.ActivityPlace)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.ActivityBookStartTime)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.ActivityBookEndTime)
                    </td>
                    <td>
                        <span id="status" class="@(item.ActivityStatusDescription=="已上架"?"status-success":(item.ActivityStatusDescription=="已下架"?"status-dark":"status-primary"))">
                            @Html.DisplayFor(modelItem => item.ActivityStatusDescription)
                        </span>
                    </td>
                    <td>
                        <div class="manage-btn-container d-flex justify-content-center">
                            <a href="@Url.Action("Edit", new { id=item.ActivityId})" class="btn-edit me-1 @(item.ActivityStatusDescription=="已下架" ? "hidden disabled-btn" : "")" style="opacity: @(item.ActivityStatusDescription=="已下架" ? 0 : 1)"><i class="bi bi-pencil-square"></i></a>


                            <a href="@Url.Action("Details", new {id=item.ActivityId})" class="btn-view me-1"><i class="bi bi-clipboard-check"></i></a>
                            <a href="@Url.Action("Delete", new {id=item.ActivityId})" class="btn-del  @(item.ActivityStatusDescription=="已下架" ? "hidden disabled-btn" : "")" style="opacity: @(item.ActivityStatusDescription=="已下架" ? 0 : 1)"><i class="bi bi-trash-fill"></i></a>

                        </div>
                    </td>
                </tr>
            }
        </tbody>
    </table>
</div>
@section Scripts{
    <script src="https://cdn.datatables.net/1.13.5/js/jquery.dataTables.min.js"></script>
    <script>
        window.onload = function () {
            // 替排序按鈕寫入排序箭頭出現事件
            document.querySelectorAll(".sort-btn").forEach(item => {
                item.addEventListener("click", function () {
                    // sortClickHandler 可寫入第二個參數，是委派
                    sortClickHandler(this);
                });
            });

            function sortClickHandler(targetBtn, callback = null) {
                truncateSortAttr(targetBtn);
                resetSortBtns();

                var sortValue = targetBtn.getAttribute('sort');
                var newSortValue = (sortValue && sortValue == 'asc') ? 'desc' : 'asc';
                setSort(targetBtn, newSortValue);

                callback && callback();
            }

            // 給按鈕加上排序箭頭
            function setSort(sortBtn, setSort) {
                sortBtn.setAttribute('sort', setSort);
                if (setSort == 'asc') {
                    sortBtn.innerHTML += '<i class="bi bi-arrow-up-short"></i>';
                } else if (setSort == 'desc') {
                    sortBtn.innerHTML += '<i class="bi bi-arrow-down-short"></i>';
                }
            }

            // 清空所有排序按鈕的箭頭
            function resetSortBtns() {
                var sortBtns = document.querySelectorAll(".sort-btn");
                sortBtns.forEach(function (btn) {
                    if (btn.innerHTML.includes("</i>")) {
                        btn.innerHTML = btn.innerHTML.substring(0, btn.innerHTML.indexOf("<"));
                    }
                });
            }

            // 清空被點擊外的其他按鈕的排序attr
            function truncateSortAttr(thisBtn = null) {
                var sortBtns = document.querySelectorAll(".sort-btn");
                sortBtns.forEach(function (btn) {
                    if (btn !== thisBtn) {
                        btn.removeAttribute('sort');
                    }
                });
            }
        };

        let table = new DataTable('#myTable', {
            searching: false,
            lengthMenu: [5, 10, 15, 30]

        })

            //let status = $("#status").val();
            //if (status =="已下架") { }

    </script>
}