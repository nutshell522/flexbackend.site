@using Flex.Products.dll.Exts
@using Flex.Products.dll.Models.ViewModel
@model IEnumerable<Flex.Products.dll.Models.ViewModel.ProductIndexVM>

@{
    ViewBag.Title = "商品管理";

    var criteria = ViewBag.Criteria as IndexSearchCriteria;
    var productSubCategory = ViewBag.ProductSubCategoryId as SelectList;
    //string _productSubCategoryId = criteria.ProductSubCategoryId.HasValue ? criteria.ProductSubCategoryId.Value.ToString() : "";
}

@section Styles {

    <link href="~/lib/datatables/css/jquery.dataTables.css" rel="stylesheet" />
    <style>
        table {
            width: 100%;
        }

        thead {
            background-color: #0B284A;
            color: white;
        }
    </style>
}

<h2>商品管理</h2>
@Html.AntiForgeryToken()
<div class="search-bar-container mb-4 d-flex">
    <form method="post" class="col-12">
        <div class="row">
            <div class="left col-8 d-flex me-auto">
                @* 輸入框區域 寬度可移除下方class w-50 自行調整 *@
                <div class="col col-3 ">
                    @*@Html.TextBoxFor(model => criteria.Name, new { @class = "form-control", placeholder = "搜尋..." })*@
                    <input id="index_Search" class="form-control " name="criteria.Name" type="text" value="@criteria.Name" placeholder="搜尋...">
                </div>
                <div class="col col-3 ms-1">
                    @Html.DropDownListFor(model => criteria.ProductSubCategoryId, productSubCategory, new { @class = "form-select" })
                    @*<select id="productSubCategoryId" name="criteria.ProductSubCategoryId" class="form-select">
                            @foreach (var item in productSubCategory)
                            {
                                <option value="@item.Value" @(_productSubCategoryId == item.Value ? "selected" : "") )>@item.Text</option>
                            }
                        </select>*@
                </div>
                <div class="col col-3 ms-1">
                    @Html.DropDownListFor(model => criteria.Status, ViewBag.StatusOption as SelectList, new { @class = "form-select" })
                </div>
            </div>
            <div class="right col-4 d-flex">
                <button id="searchBtn" class="btn btn-primary">搜尋</button>
                @Html.ActionLink("新增商品", "Create", null, new { @class = "btn btn-primary" })
                @Html.ActionLink("匯入商品", "CreateForExcel", null, new { @class = "btn btn-primary" })
                <button class="btn btn-primary" onclick="editStatus()">儲存</button>
            </div>
        </div>
    </form>
</div>

<table id="indexProduct" class="table table-striped table-hover">
    <thead>
        <tr>
            <th class="th-col-0 sticky text-center">
                <input id="check-all-status" class="form-check-input check-all me-2" type="checkbox" onclick="getAllStatus(this)">
                <label class="form-check-label" for="check-all-status">下架</label>
            </th>
            <th class="th-col-2 text-center">
                @Html.DisplayNameFor(model => model.ProductName)
            </th>
            <th class="th-col-2 text-center">
                庫存
            </th>
            <th class="th-col-2 text-center">
                @Html.DisplayNameFor(model => model.SubCategoryPath)
            </th>
            <th class="th-col-1 text-center">
                @Html.DisplayNameFor(model => model.SalesPrice)
            </th>
            <th class="th-col-1 text-center">
                @Html.DisplayNameFor(model => model.StatusText)
            </th>
            <th class="th-col-2 text-center">
                @Html.DisplayNameFor(model => model.Tag)
            </th>
            <th class="th-col-2 text-center">管理</th>
        </tr>
    </thead>
    <tbody>
        @* 如有照片要放
            格式:
            <td><div class="table-img-container"><img src="XXX.png" alt=""></div></td>
        *@
        @foreach (var item in Model)
        {
            <tr>
                <td class="sticky text-center align-middle">
                    <input class="form-check-input check-item" type="checkbox" data-id="@item.ProductId" onclick="saveStatus(this)" @(item.Status ? "checked" : "") />
                </td>
                <td class="text-center align-middle">
                    @Html.DisplayFor(modelItem => item.ProductName)
                </td>
                <td>
                    @if (item.ProductGroupList.Count > 0)
                    {
                        for (int i = 0; i < item.ProductGroupList.Count; i++)
                        {

                            <span class="d-flex text-start align-items-center mb-1">
                                @Html.TextBoxFor(modelItem => item.ProductGroupList[i].Qty, new { @class = "form-control d-inline", @readonly = "readonly", style = "width: 70px; text-align: right;" })  @item.ProductGroupList[i].ColorName / @item.ProductGroupList[i].SizeName
                            </span>
                        }
                    }
                </td>
                <td class="text-center align-middle">
                    @Html.DisplayFor(modelItem => item.SubCategoryPath)
                </td>
                <td class="text-center align-middle">
                    @Html.DisplayFor(modelItem => item.SalesPrice)
                </td>
                <td class="text-center align-middle">
                    @Html.DisplayFor(modelItem => item.StatusText)
                </td>
                <td class="text-center align-middle">
                    @Html.DisplayFor(modelItem => item.Tag)
                </td>
                <td class="text-center align-middle">
                    <div class="d-flex justify-content-center">
                        <a href="@Url.Action("Edit", new {ProductId=item.ProductId })" class="btn-edit me-1"><i class="bi bi-pencil-square"></i></a>
                        <a href="@Url.Action("EditImg", new {ProductId=item.ProductId })" class="btn-edit me-1"><i class="bi bi-image"></i></a>
                        <a href="#" class="btn-del me-1" onclick='deleteProduct(event,@item.ProductId,"@item.ProductName")'><i class="bi bi-trash-fill"></i></a>
                    </div>
                </td>
            </tr>
        }
    </tbody>
</table>



@section Scripts{

    <script src="~/lib/datatables/js/jquery.dataTables.min.js"></script>
    <script>

        $(document).ready(function () {
            // 在頁面載入完成時觸發請求
            $('#indexProduct').DataTable(
                {
                    "searching": false,
                    "paging": true, // 如果要顯示分頁器，設為 true
                    "pageLength": 5, // 設定預設每頁顯示筆數
                    "stateSave": true,
                    "lengthMenu": [[5, 10, 15, 20, -1], [5, 10, 15, 20, "All"]],
                    oLanguage: {    // 中文化
                        "sLengthMenu": "每頁顯示 _MENU_筆",
                        "sZeroRecords": "沒有找到符合條件的資料",
                        "sProcessing": "載入中...",
                        "sInfo": "第 _START_ 到 _END_ 筆，總共 _TOTAL_ 筆",
                        "sInfoEmpty": "沒有記錄",
                        "sInfoFiltered": "(從 _MAX_ 條記錄中過濾)",
                        "sSearch": "搜尋：",
                        "oPaginate":
                        {
                            "sFirst": "首頁",
                            "sPrevious": "前一頁",
                            "sNext": "後一頁",
                            "sLast": "尾頁"
                        }
                    },
                    "columnDefs": [{
                        "orderable": false,
                        "defaultContent":"",
                        "targets": [0, 7]
                    }],
                    "order": [[1, 'asc']],
                }
            );
        });

        function deleteProduct(event, productId, productName){
                event.preventDefault();

             if (confirm("確認是否要刪除 : " + productName)) {
                 var data = {
                     productId: productId,
                     __RequestVerificationToken: $('input[name="__RequestVerificationToken"]').val()
                 };
                $.ajax({
                    url: '@Url.Action("Delete", "Products")',
                    type: 'POST',
                    data: data,
                    success: function (result) {
                        if (result.success) {
                            alert(productName + "已被刪除");
                            location.reload()
                        }
                        else {
                            alert("刪除失敗 : " + result.message);
                        }
                    },
                    error: function () {
                        alert("刪除失敗");
                    }
                });
              }
          }

        var productData = [];

        function saveStatus(element) {
            let productId = element.getAttribute("data-id");
            if (productData.includes(productId)) {
                productData.splice(productData.indexOf(productId), 1);
            }
            else
            {
                productData.push(productId);
            }
            console.log(productData);
        };

        function getAllStatus(element) {
            var checked = $(element).prop("checked");
            $(".check-item").prop("checked", checked);

            productData = [];

            $(".check-item").each(function () {
                var productId = $(this).data("id");
                productData.push(productId);
            });

            console.log(productData);
        };

        function editStatus() {
            var productIdAndStatus = [];
            productData.forEach(productId => {
                var status = $('.check-item[data-id="' + productId + '"]').prop('checked');
                productIdAndStatus.push({ ProductId: productId, Status: status });
            });
            console.log(productIdAndStatus);

            $.ajax({
                type: "POST",
                url: "/Products/SaveChangeStatus",
                data: JSON.stringify(productIdAndStatus),
                contentType: "application/json",
                success: function (response) {
                    window.location.reload();
                },
                error: function (error) {
                    console.log(error);
                }
            });
        }
    </script>
}
