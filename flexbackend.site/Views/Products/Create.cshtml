@model Flex.Products.dll.Models.ViewModel.ProductCreateVM

@{
    ViewBag.Title = "新增商品";
    var colorCategory = ViewBag.Color as SelectList;
    var sizeCategory = ViewBag.Size as SelectList;
}

<h2>新增商品</h2>


@using (Html.BeginForm("Create", "Products", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()

    <div class="row">
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="mb-3 col-12 d-flex">
            <div class="col-3">
                @Html.LabelFor(model => model.ProductId, htmlAttributes: new { @class = "form-label" })
                @Html.EditorFor(model => model.ProductId, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ProductId, "", new { @class = "text-danger" })
            </div>

            <div class="col-3 ms-3">
                @Html.LabelFor(model => model.ProductName, htmlAttributes: new { @class = "form-label" })
                @Html.EditorFor(model => model.ProductName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ProductName, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="col-12">
            <div class="mb-3">
                @Html.LabelFor(model => model.ProductDescription, htmlAttributes: new { @class = "form-label" })
                @Html.TextAreaFor(model => model.ProductDescription, new { @class = "form-control", rows = "5" })
                @Html.ValidationMessageFor(model => model.ProductDescription, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="mb-3">
            @Html.LabelFor(model => model.fk_ProductSubCategoryId, htmlAttributes: new { @class = "form-label" })
            @Html.DropDownListFor(model => model.fk_ProductSubCategoryId, ViewBag.ProductSubCategoryId as SelectList, new { @class = "form-select" })
            @Html.ValidationMessageFor(model => model.fk_ProductSubCategoryId, "", new { @class = "text-danger" })
        </div>
        <div class="mb-3">
            @Html.EditorFor(model => model.Status, new { htmlAttributes = new { @class = "form-check-input" } })
            @Html.LabelFor(model => model.Status, htmlAttributes: new { @class = "form-check-label" })
            @Html.ValidationMessageFor(model => model.Status, "", new { @class = "text-danger" })
        </div>
        <div class="mb-3 col-12 d-flex">
            <div class="col-3">
                @Html.LabelFor(model => model.ProductMaterial, htmlAttributes: new { @class = "form-label" })
                @Html.EditorFor(model => model.ProductMaterial, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ProductMaterial, "", new { @class = "text-danger" })
            </div>

            <div class="col-3 ms-3">
                @Html.LabelFor(model => model.ProductOrigin, htmlAttributes: new { @class = "form-label" })
                @Html.EditorFor(model => model.ProductOrigin, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ProductOrigin, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="mb-3 col-12 d-flex">
            <div class="col-3">
                @Html.LabelFor(model => model.UnitPrice, htmlAttributes: new { @class = "form-label" })
                @Html.EditorFor(model => model.UnitPrice, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.UnitPrice, "", new { @class = "text-danger" })
            </div>

            <div class="col-3 ms-3">
                @Html.LabelFor(model => model.SalesPrice, htmlAttributes: new { @class = "form-label" })
                @Html.EditorFor(model => model.SalesPrice, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.SalesPrice, "", new { @class = "text-danger" })
            </div>
        </div>
        @*<div class="mb-3 col-12 d-flex">
                <div class="col-3">
                    @Html.LabelFor(model => model.StartTime, htmlAttributes: new { @class = "form-label" })
                    @Html.EditorFor(model => model.StartTime, new { htmlAttributes = new { @class = "form-control", type = "datetime-local" } })
                    @Html.ValidationMessageFor(model => model.StartTime, "", new { @class = "text-danger" })
                </div>

                <div class="col-3 ms-3">
                    @Html.LabelFor(model => model.EndTime, htmlAttributes: new { @class = "form-label" })
                    @Html.EditorFor(model => model.EndTime, new { htmlAttributes = new { @class = "form-control", type = "datetime-local" } })
                    @Html.ValidationMessageFor(model => model.EndTime, "", new { @class = "text-danger" })
                </div>
            </div>*@

        <div class="mb-3">
            @Html.LabelFor(model => model.Tag, htmlAttributes: new { @class = "form-label" })
            @Html.EditorFor(model => model.Tag, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Tag, "", new { @class = "text-danger" })
        </div>

        <div id="createImg">
            <div id="previewImages"></div>
        </div>

        <div class="mb-3">
            @Html.LabelFor(model => model.ImgPaths, htmlAttributes: new { @class = "form-label" })
            <input type="file" name="CreateFile" id="createFile" class="form-control" multiple />
            @Html.ValidationMessageFor(model => model.ImgPaths, "", new { @class = "text-danger" })
        </div>
        <div class="p-3 ms-1 mb-3 border border-4 rounded-2 form-control w-75">
            <div class="mb-3">
                <span>規格</span>
                <button class="btn btn-secondary ms-3 " type="button" id="addSpecBtn">新增規格</button>
            </div>
            <div id="specContainer">
                @for (var i = 0; i < Model.ProductGroups.Count; i++)
                {
                    <div class="product-group d-flex mb-3">
                        @Html.DropDownListFor(model => model.ProductGroups[i].ColorId, colorCategory, new { @class = "form-select", id = Model.ProductGroups[i].ColorId + "-ColorId" })
                        @Html.DropDownListFor(model => model.ProductGroups[i].SizeId, sizeCategory, new { @class = "form-select", id = Model.ProductGroups[i].SizeId + "-SizeId" })
                        <input class='form-control' type='number' name='ProductGroups[@i].Qty' value='@Model.ProductGroups[i].Qty' required='required' />
                        <button type='button' class='btn btn-danger deleteSpecBtn ms-2'>刪除</button>
                    </div>
                }
            </div>
            @Html.ValidationMessageFor(model => model.ProductGroups, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="mb-3">
        <input type="submit" value="儲存" class="btn btn-primary" />
        <input type="button" value="取消" class="btn btn-primary" onclick='location.href="@Url.Action("Index")"' />
    </div>
    <div class="d-none">
        @*@Html.DropDownListFor(modelItem => modelItem.ProductGroups[999].ColorId, colorCategory, new { @class = "form-select", id = "colorSelectTemplate" })
            @Html.DropDownListFor(modelItem => modelItem.ProductGroups[999].SizeId, sizeCategory, new { @class = "form-select", id = "sizeSelectTemplate" })*@
        @Html.DropDownList("ColorIdTemplate", colorCategory, new { @class = "form-select", id = "colorSelectTemplate" })
        @Html.DropDownList("SizeIdTemplate", sizeCategory, new { @class = "form-select", id = "sizeSelectTemplate" })
    </div>

}

@section Scripts {
    <script>
        var productGroups = @Html.Raw(Json.Encode(Model.ProductGroups));
        $(document).ready(function () {
            checkImg();
            // 呼叫一次產生初始的規格組
            if (productGroups == null || productGroups.length === 0) {
                addSpecGroup(0);
            }
            
            var addSpecBtn = $("#addSpecBtn");

            //新增規格
            addSpecBtn.click(function () {
                addSpecGroup();
            });
        });

        function checkImg() {
            $('input[type="file"]').change(function (e) {
                var files = e.target.files;
                if (files && files.length > 0) {
                    $('#previewImages').empty(); // 清空預覽區域

                    for (var i = 0; i < files.length; i++) {
                        var reader = new FileReader();
                        reader.onload = function (e) {
                            var image = $('<img>');
                            image.attr('src', e.target.result);
                            image.attr('alt', 'Preview');
                            image.css('width', '150px');
                            image.css('height', '150px');
                            $('#previewImages').append(image);
                        };
                        reader.readAsDataURL(files[i]);
                    }
                }
            });
        }

        function addSpecGroup(qty) {

            var specContainer = $("#specContainer");

            var index = specContainer.children(".product-group").length;

            var newSpecGroup = $("<div class='product-group d-flex mb-3'></div>");

            var colorSelect = $("#colorSelectTemplate").clone();
            colorSelect.attr("name", "ProductGroups[" + index + "].ColorId");
            colorSelect.removeAttr("id");
            newSpecGroup.append(colorSelect);

            var sizeSelect = $("#sizeSelectTemplate").clone();
            sizeSelect.attr("name", "ProductGroups[" + index + "].SizeId");
            sizeSelect.removeAttr("id");
            newSpecGroup.append(sizeSelect);

            var qtyInput = $(`<input class='form-control' type='number' name='ProductGroups[${index}].Qty' value='${qty}' required='required' />`);
            newSpecGroup.append(qtyInput);

            var deleteBtn = $("<button type='button' class='btn btn-danger deleteSpecBtn ms-2'>刪除</button>");
            deleteBtn.click(function () {
                if (specContainer.children(".product-group").length > 1) {
                    $(this).parent().remove();
                    } else {
                    alert("至少要有一組規格");
                }
            });
                newSpecGroup.append(deleteBtn);

                specContainer.append(newSpecGroup);
        }

    </script>
    @Scripts.Render("~/bundles/jqueryval")
}
